-module('ALU_tests').
-include_lib("eunit/include/eunit.hrl").

chip_test_() ->
    ALU = fun 'ALU':chip/8,

    Zero = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    One = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
    Two = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
    Three = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
    Four = {0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},
    Fourteen = {0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0},
    Sixteen = {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
    Seventeen = {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1},
    Eighteen = {0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0},
    Nineteen = {0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1},
    Twenty = {0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0},

    NegOne = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    NegTwo = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
    NegThree = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1},
    NegFour = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},
    NegFourteen = {1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0},
    NegSeventeen = {1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
    NegEighteen = {1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0},

    [
        ?_assertEqual(ALU(Zero, NegOne, 1, 0, 1, 0, 1, 0), {Zero, 1, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 1, 1, 1, 1, 1, 1), {One, 0, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 1, 1, 1, 0, 1, 0), {NegOne, 0, 1}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 0, 1, 1, 0, 0), {Zero, 1, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 1, 1, 0, 0, 0, 0), {NegOne, 0, 1}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 0, 1, 1, 0, 1), {NegOne, 0, 1}),
        ?_assertEqual(ALU(Zero, NegOne, 1, 1, 0, 0, 0, 1), {Zero, 1, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 0, 1, 1, 1, 1), {Zero, 1, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 1, 1, 0, 0, 1, 1), {One, 0, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 1, 1, 1, 1, 1), {One, 0, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 1, 1, 0, 1, 1, 1), {Zero, 1, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 0, 1, 1, 1, 0), {NegOne, 0, 1}),
        ?_assertEqual(ALU(Zero, NegOne, 1, 1, 0, 0, 1, 0), {NegTwo, 0, 1}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 0, 0, 0, 1, 0), {NegOne, 0, 1}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 1, 0, 0, 1, 1), {One, 0, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 0, 0, 1, 1, 1), {NegOne, 0, 1}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 0, 0, 0, 0, 0), {Zero, 1, 0}),
        ?_assertEqual(ALU(Zero, NegOne, 0, 1, 0, 1, 0, 1), {NegOne, 0, 1}),

        ?_assertEqual(ALU(Seventeen, Three, 1, 0, 1, 0, 1, 0), {Zero, 1, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 1, 1, 1, 1, 1, 1), {One, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 1, 1, 1, 0, 1, 0), {NegOne, 0, 1}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 0, 1, 1, 0, 0), {Seventeen, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 1, 1, 0, 0, 0, 0), {Three, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 0, 1, 1, 0, 1), {NegEighteen, 0, 1}),
        ?_assertEqual(ALU(Seventeen, Three, 1, 1, 0, 0, 0, 1), {NegFour, 0, 1}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 0, 1, 1, 1, 1), {NegSeventeen, 0, 1}),
        ?_assertEqual(ALU(Seventeen, Three, 1, 1, 0, 0, 1, 1), {NegThree, 0, 1}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 1, 1, 1, 1, 1), {Eighteen, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 1, 1, 0, 1, 1, 1), {Four, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 0, 1, 1, 1, 0), {Sixteen, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 1, 1, 0, 0, 1, 0), {Two, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 0, 0, 0, 1, 0), {Twenty, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 1, 0, 0, 1, 1), {Fourteen, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 0, 0, 1, 1, 1), {NegFourteen, 0, 1}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 0, 0, 0, 0, 0), {One, 0, 0}),
        ?_assertEqual(ALU(Seventeen, Three, 0, 1, 0, 1, 0, 1), {Nineteen, 0, 0})
    ].
